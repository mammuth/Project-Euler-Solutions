/**
 * Created by Max Muth on 07.08.14.
 * kontakt@maxi-muth.de
 * <p/>
 * <p/>
 * <p/>
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * <p/>
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * <p/>
 * Let us list the factors of the first seven triangle numbers:
 * <p/>
 * 1: 1
 * 3: 1,3
 * 6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * <p/>
 * We can see that 28 is the first triangle number to have over five divisors.
 * <p/>
 * What is the value of the first triangle number to have over five hundred divisors?
 * <p/>
 * <p/>
 * Solution: 76576500
 */
public class Problem012 {

    public static void main(String[] args) {
        calculateIterative();
    }


    /**
     * Works and gets up to 320 divisors within seconds on my machine - but takes multiple minutes for more.
     */
    private static void calculateIterative() {
        int triangle = 0;
        int count = 0;
        int biggestCount = 0;

        for (int i = 1; i < 1000000000; i++) {
            triangle += i;

            for (int j = 1; j <= Math.sqrt(triangle); j++) {

                if (triangle % j == 0) {
                    count++;

                    if (count > biggestCount) {
                        biggestCount = count;
                        System.out.println(triangle + ": " + biggestCount);
                    }

                    if (count > 500) {
                        System.out.println("Found Triangle Number " + triangle + " with #divisors = " + count);
                        return;
                    }

                }

            }

            count = 0;
        }

    }

}
